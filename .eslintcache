[{"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\index.tsx":"1","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\reportWebVitals.ts":"2","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\App.tsx":"3","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\Home.tsx":"4","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\Navbar\\Navbar.tsx":"5","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\HomeHero\\HeroSection.tsx":"6","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\HomeBookSection\\BookSection.tsx":"7","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\SearchPage\\SearchPage.tsx":"8","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\SearchList\\SearchList.tsx":"9","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\StarDisplay\\StarDisplay.tsx":"10","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\BookViewPage\\BookViewPage.tsx":"11","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\BookDetails\\BookDetails.tsx":"12","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\contexts\\UserContext.ts":"13","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\Menu\\Menu.tsx":"14","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\LoginPage\\LoginPage.tsx":"15","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\Footer\\Footer.tsx":"16","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\GenreBooksPage\\GenreBooksPage.tsx":"17","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\CartViewPage\\CartViewPage.tsx":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1232,"mtime":1607857389268,"results":"22","hashOfConfig":"20"},{"size":365,"mtime":1607664773058,"results":"23","hashOfConfig":"20"},{"size":4748,"mtime":1607857880307,"results":"24","hashOfConfig":"20"},{"size":865,"mtime":1607182887577,"results":"25","hashOfConfig":"20"},{"size":2402,"mtime":1607919710977,"results":"26","hashOfConfig":"20"},{"size":1179,"mtime":1607441319926,"results":"27","hashOfConfig":"20"},{"size":1609,"mtime":1607687305312,"results":"28","hashOfConfig":"20"},{"size":1541,"mtime":1607835675005,"results":"29","hashOfConfig":"20"},{"size":1059,"mtime":1607441598917,"results":"30","hashOfConfig":"20"},{"size":2045,"mtime":1607856013143,"results":"31","hashOfConfig":"20"},{"size":92,"mtime":1607524292820,"results":"32","hashOfConfig":"20"},{"size":612,"mtime":1607579692042,"results":"33","hashOfConfig":"20"},{"size":2475,"mtime":1607788672618,"results":"34","hashOfConfig":"20"},{"size":438,"mtime":1607664512699,"results":"35","hashOfConfig":"20"},{"size":2327,"mtime":1607699325385,"results":"36","hashOfConfig":"20"},{"size":4097,"mtime":1607861995505,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"bulvtc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\index.tsx",[],["87","88"],"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\reportWebVitals.ts",[],"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\App.tsx",["89","90","91"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Link, useLocation} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport SearchPage from './pages/SearchPage/SearchPage';\nimport BookViewPage from './pages/BookViewPage/BookViewPage';\nimport { UserContext } from './contexts/UserContext';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport GenreBooksPage from './pages/GenreBooksPage/GenreBooksPage';\nimport CartViewPage from './pages/CartViewPage/CartViewPage';\n\n\nconst App:React.FC = () => {\n  const [user, setUser] = useState<any>(null);\n\n\n  return (\n    <Router>\n      <UserContext.Provider value={{user, setUser}}>\n        <div>\n          <Navbar/>\n        </div>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/login\" exact component={LoginPage}/>\n        <Route path=\"/search\" component={SearchPage}/>\n        <Route path=\"/cart\" exact component={CartViewPage}/>\n        <Route path=\"/book/:bookId\" component={BookViewPage}/>\n        <Route path=\"/genre/:genreName\" component={GenreBooksPage}/>\n      </UserContext.Provider>\n      \n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\Home.tsx",[],"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\Navbar\\Navbar.tsx",["92","93"],"import React, {useState, useContext} from 'react';\r\nimport {useHistory, useLocation, Link} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\nimport logo from '../../images/logo.svg';\r\nimport searchIcon from '../../images/searchicon.svg';\r\nimport cartIcon from '../../images/carticon.svg';\r\nimport userSample from '../../images/user.svg';\r\nimport { useGoogleLogout} from 'react-google-login';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport Menu from '../Menu/Menu';\r\n\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const {user, setUser} = useContext(UserContext);\r\n  console.log(user);\r\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\r\n  const NavLinksList = [\r\n    {\r\n      \"name\" : \"Fiction\",\r\n      \"pathName\" : \"/genre/fantasy&fiction\"\r\n    },\r\n    {\r\n      \"name\" : \"Children's\",\r\n      \"pathName\" : \"/genre/childrens\"\r\n    },\r\n    {\r\n      \"name\" : \"History\",\r\n      \"pathName\" : \"/genre/history\"\r\n    },\r\n    {\r\n      \"name\" : \"Horror\",\r\n      \"pathName\" : \"/genre/horror\"\r\n    },\r\n    {\r\n      \"name\" : \"Mystery\",\r\n      \"pathName\" : \"/genre/mystery\"\r\n    },\r\n    {\r\n      \"name\" : \"Non-Fiction\",\r\n      \"pathName\" : \"/genre/nonfiction\"\r\n    }\r\n  ]\r\n\r\n  const pathName = location.pathname;\r\n\r\n  const CLIENT_ID:string = process.env.REACT_APP_CLIENT_ID || \"\";\r\n  const CLIENT_SECRET:string = process.env.REACT_APP_CLIENT_SECRET || \"\";\r\n\r\n  const {signOut, loaded} = useGoogleLogout({\r\n    clientId : CLIENT_ID,\r\n    onLogoutSuccess: () => {\r\n      onLogOutSuccess();\r\n    }\r\n  })\r\n\r\n  const onSearch = () => {\r\n    history.push({pathname:'/search', search: `query=${searchInput}`,});\r\n  }\r\n\r\n  const onClickLogo = () => {\r\n    setSearchInput(\"\");\r\n    history.push({pathname:'/'});\r\n  }\r\n\r\n  const logOutUser = () => {\r\n    signOut();\r\n    return true;\r\n  }\r\n\r\n  const onLogOutSuccess = () => {\r\n    setUser(null);\r\n    (isMenuOpen) && toggleMenu();\r\n  }\r\n\r\n  const toggleMenu = () => {\r\n    (isMenuOpen) ? setIsMenuOpen(false) : setIsMenuOpen(true);  \r\n  }\r\n\r\n  const navigateToGenrePage = (genrePath : String) => {\r\n    history.push({pathname:`${genrePath}`});\r\n  }\r\n\r\n  return (\r\n    (pathName !== \"/login\") ? <div className={styles.navOuterContainer}>\r\n      <div className={styles.navInnerContainer}>\r\n        <div className={styles.navTopSection}>\r\n          <img onClick={onClickLogo} className={styles.logoImage} src={logo} alt=\"Taperback\"/>\r\n          <div className={styles.searchBarContainer}>\r\n            <div className={styles.searchBar}>\r\n              <input className={styles.searchBarInput} value={searchInput} onChange={(e) => {setSearchInput(e.target.value)}} onKeyDown={(e) => {if(e.key === \"Enter\"){onSearch()}}} type=\"text\" placeholder=\"Search for books, authors, etc...\"/>\r\n              <button onClick={onSearch} className={styles.searchBtn}>\r\n                <img src={searchIcon} className={styles.searchBtnIcon} alt=\"Search\"/>\r\n                \r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <Link to=\"/cart\"><div className={styles.cartContainer}>\r\n            <img className={styles.cartIcon} src={cartIcon} alt=\"\"/>\r\n            <span className={styles.cartBadge}>{(user != null && user.user.cartItems) ? user.user.cartItems.items.length : 0}</span>\r\n          </div></Link>\r\n          <div className={styles.accountContainer}>\r\n            {\r\n              (user == null) ? <div>\r\n                <img onClick={() => {history.push(\"/login\")}} className={styles.accountIcon} src={userSample} alt=\"\"/>\r\n\r\n              </div> : (\r\n                <div>\r\n                  <img onClick={toggleMenu} className={styles.accountIcon} src={`${user.imageUrl}`} alt=\"\"/>\r\n                  {/* <GoogleLogout clientId={CLIENT_ID} buttonText=\"Logout\" onLogoutSuccess={onLogSuccess}></GoogleLogout> */}\r\n                  <Menu menuData={[{name: \"Account\", action: ()=> {return true;}},{name: \"View Orders\", action: ()=> {return true;}},{name: \"Logout\", action: logOutUser}]} isMOpen={isMenuOpen} />\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className={styles.navBottomSection}>\r\n          {\r\n            NavLinksList.map((navLink, index) => {\r\n              return <div key={index} className={styles.genreLinkContainer} onClick={() => {navigateToGenrePage(navLink.pathName);}}>\r\n                <span className={(pathName === navLink.pathName) ? styles.genreLinkActive : styles.genreLinks}>{navLink.name}</span>\r\n              </div>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div> : <div></div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\HomeHero\\HeroSection.tsx",["94"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './HeroSection.module.css';\r\nimport heroImage from '../../images/heroimage.png';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <div className={styles.heroContainer}>\r\n      <Carousel autoPlay className={styles.carousel} showArrows={true} showThumbs={false} showStatus={false}>\r\n        <div>\r\n          <img className={styles.herobgImage} src={heroImage} alt=\"\"/>\r\n        </div>\r\n        <div>\r\n          <img className={styles.herobgImage} src={heroImage} alt=\"\"/>\r\n        </div>\r\n        <div>\r\n          <img className={styles.herobgImage} src={heroImage} alt=\"\"/>\r\n        </div>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\HomeBookSection\\BookSection.tsx",["95","96"],"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\SearchPage\\SearchPage.tsx",["97"],"import React, {useState, useEffect} from 'react';\r\nimport styles from './SearchPage.module.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport queryString from 'querystring';\r\nimport axios from 'axios';\r\nimport SearchList from '../../components/SearchList/SearchList';\r\nimport {Book} from '../../interfaces/BookInterface'\r\n\r\nconst SearchPage = () => {\r\n  const history = useHistory();\r\n  const [query, setQuery] = useState<string>(\"\");\r\n  const [bookData, setBookData] = useState<Array<Book>>([]);\r\n\r\n  useEffect(() => {\r\n    setQuery(`${queryString.parse(history.location.search)[\"?query\"]}`);\r\n  }, [history.location.search]);\r\n\r\n  useEffect(() => {\r\n    if(query !== \"\"){\r\n      fetchSearchResults();\r\n    }\r\n  }, [query])\r\n\r\n  const fetchSearchResults = () => {\r\n    axios.get('/api/search', {\r\n      params: {\r\n        query: query\r\n      }\r\n    })\r\n    .then(function (response) {\r\n      setBookData(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      alert(\"Server down!\")\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchPageContainer}>{\r\n      <SearchList bookData={bookData}/>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\SearchList\\SearchList.tsx",["98","99"],"import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport BookSection from '../HomeBookSection/BookSection';\r\nimport StarDisplay from '../StarDisplay/StarDisplay';\r\nimport styles from './SearchList.module.css';\r\nimport {Book} from '../../interfaces/BookInterface'\r\n\r\nconst SearchList: React.FC<{bookData : Array<Book>}> = ({bookData}) => {\r\n\r\n\r\n  return (\r\n    <div className={styles.bookListContainer}>\r\n      <div className={styles.searchHeader}>\r\n        <span>Search Results</span>\r\n        <div className={styles.orangeLine}></div>\r\n      </div>\r\n      {\r\n        bookData.map((book, index) => {\r\n          return (\r\n            <SearchBookCard book={book} key={index}/>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchBookCard: React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchBookCard}>\r\n      <img className={styles.bookCoverImage} onClick={onBookClick} src={`${book.cover}`} alt={`${book.title}`}/>\r\n      <div className={styles.bookInfoContainer}>\r\n        <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n        <span className={styles.bookSubtitle}>({book.subtitle})</span>\r\n        <span className={styles.bookAuthor}>{book.author}</span>\r\n        <StarDisplay value={parseFloat(`${book.ratings}`)} size={'20px'}/>\r\n        <span className={styles.bookCost}>₹{book.cost}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchList;","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\StarDisplay\\StarDisplay.tsx",["100"],"import React, {useState,useEffect} from 'react';\r\nimport styles from './StarDisplay.module.css';\r\nimport starFull from '../../images/star_full.svg';\r\nimport starHalf from '../../images/star_half.svg';\r\nimport starFullEmpty from '../../images/star_full_empty.svg';\r\n\r\nconst StarDisplay:React.FC<{value: number, size: string}> = ({value, size}) => {\r\n\r\n  const [stars, setStars] = useState<Array<JSX.Element>>([]);\r\n\r\n  useEffect(() => {\r\n    getStars();\r\n  }, [value])\r\n\r\n  const starImage = (isFull : number) : JSX.Element => {\r\n    if(isFull === 0){\r\n      return (<img className={styles.star} height={size} width={size} src={starFull} alt=\"\"/>);\r\n    }else if(isFull === 1){\r\n      return (<img className={styles.star} height={size} width={size} src={starHalf} alt=\"\"/>);\r\n    }else{\r\n      return (<img className={styles.star} height={size} width={size} src={starFullEmpty} alt=\"\"/>);\r\n    }\r\n  }\r\n\r\n  const getStars = () => {\r\n    let stars : Array<JSX.Element> = [];\r\n    const floorvalue = Math.floor(value);\r\n    for(let i = 0; i < floorvalue; i++){\r\n      stars.push(starImage(0));\r\n    }\r\n    let remainStars = 5 - floorvalue;\r\n    if(remainStars > 0){\r\n      stars.push(starImage(1));\r\n      remainStars--;\r\n    }\r\n    for(let i = 0; i < remainStars; i++){\r\n      stars.push(starImage(2));\r\n    }\r\n    setStars(stars);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.starContainer}>\r\n      {\r\n        stars.map((star, index) => {\r\n          return (star);\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StarDisplay;\r\n\r\n","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\BookViewPage\\BookViewPage.tsx",["101"],"import React, {useState, useEffect} from 'react';\r\nimport BookDetails from '../../components/BookDetails/BookDetails';\r\nimport axios from 'axios';\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport styles from './BookViewPage.module.css';\r\n\r\nconst BookViewPage:React.FC<{match : any}> = ({match}) => {\r\n\r\n  const {\r\n    params: {bookId},\r\n  } = match;\r\n\r\n  const [bookDetails, setBookDetails] = useState<Book|null>(null);\r\n\r\n  const fetchBookDetails = () => {\r\n    axios.get('/api/findBook', {\r\n      params: {\r\n        bookId: bookId\r\n      }\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setBookDetails(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Server down!\")\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBookDetails();\r\n  }, [match])\r\n\r\n  return (\r\n    <div className={styles.booksViewPageContainer}>\r\n      {\r\n        (bookDetails != null) ? <BookDetails bookDetails={bookDetails} /> : <div></div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default BookViewPage;\r\n","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\BookDetails\\BookDetails.tsx",["102","103"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport styles from './BookDetails.module.css';\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport StarDisplay from '../StarDisplay/StarDisplay';\r\nimport {UserContext} from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\n\r\nconst BookDetails:React.FC<{bookDetails : Book}> = ({bookDetails}) => {\r\n  const {user, setUser} = useContext(UserContext);\r\n  const updatedUser = user;\r\n\r\n  const addToCartClick = () => {\r\n    if(user != null){\r\n      const userGoogleId = user.user.googleId;\r\n      const tokenId = user.tokenId;\r\n      axios.post(\"/api/addToCart\", {tokenId, bookId: bookDetails._id, userGoogleId}).then(res => {\r\n        updatedUser.user.cartItems = res.data.cart;\r\n        setUser({...updatedUser});\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bookDetailsPageContainer}>\r\n      <div className={styles.bookCoverContainer}>\r\n        <img className={styles.bookCoverImage} src={`${bookDetails.cover}`} alt={`${bookDetails.title}`}/>\r\n      </div>\r\n      <div className={styles.bookDetailsContainer}>\r\n        <span className={styles.bookTitle}>{bookDetails.title}</span>\r\n        {(bookDetails.subtitle !== \"\") && <span className={styles.bookSubtitle}>({bookDetails.subtitle})</span>}\r\n        <span className={styles.bookAuthor}>by {bookDetails.author}</span>\r\n        <div className={styles.starRatingsContainerWithVal}>\r\n          <StarDisplay value={parseFloat(`${bookDetails.ratings}`)} size={'20px'}/>\r\n          <span className={styles.ratingVal}>{bookDetails.ratings}</span>\r\n        </div>\r\n        <span className={styles.bookCost}>₹{bookDetails.cost}/-</span>\r\n        <div className={styles.buyBtnContainer}>\r\n          <button className={styles.buyBtn}>Buy Now</button>\r\n          <button className={styles.addToCartBtn} onClick={addToCartClick}>Add to Cart</button>\r\n        </div>\r\n        <span className={styles.bookDesc}>{bookDetails.desc}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default BookDetails;","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\contexts\\UserContext.ts",[],"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\Menu\\Menu.tsx",["104"],"import React, {useState} from 'react';\r\nimport styles from './Menu.module.css';\r\nimport {MenuInterface} from '../../interfaces/MenuInterface';\r\n\r\nconst Menu : React.FC<{menuData : MenuInterface, isMOpen : boolean}> = ({menuData, isMOpen}) => {\r\n  \r\n  console.log(isMOpen);\r\n\r\n  return (\r\n    <div style={{display: isMOpen ? 'block' : 'none' }} className={styles.dropDownMenuContainer}>\r\n      {\r\n        menuData.map((menu, index) => {\r\n          return <div key={index} onClick={menu.action} className={styles.dropDownMenuItem}>{menu.name}</div>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\LoginPage\\LoginPage.tsx",["105","106","107"],"import React, {useContext, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './LoginPage.module.css';\r\nimport logo from '../../images/logo.svg'\r\nimport gLogo from '../../images/googlelogo.png'\r\nimport {GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline} from 'react-google-login';\r\nimport {UserContext} from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginPage:React.FC = () => {\r\n\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  useEffect(() => {\r\n    if(user != null){\r\n      history.replace(\"/\")\r\n    } \r\n  }, [user])\r\n\r\n  return(\r\n    <div className={styles.loginPageContainer}>\r\n      <LoginCard />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LoginCard = () => {\r\n\r\n  const {user, setUser} = useContext(UserContext);\r\n  const CLIENT_ID:string = process.env.REACT_APP_CLIENT_ID || \"\";\r\n\r\n\r\n  const onSuccessCallback = (response : GoogleLoginResponse | GoogleLoginResponseOffline) =>{\r\n    console.log(\"Logged In\");\r\n    if(response.code === undefined){\r\n      const userProfileObj = (response as GoogleLoginResponse).profileObj;\r\n      \r\n      axios.post(\"/api/userLogin\", {user : (response as GoogleLoginResponse).profileObj}).then(res => {\r\n        console.log(res.data);\r\n        setUser({user: res.data, tokenId: (response as GoogleLoginResponse).tokenId, imageUrl: userProfileObj.imageUrl})\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={styles.loginPageCard}>\r\n        <img className={styles.logo} src={logo} alt=\"\"/>\r\n        <span className={styles.subQuote}>Today a reader,<br/>tomorrow a leader.</span>\r\n\r\n        <GoogleLogin \r\n          clientId={CLIENT_ID}\r\n          render={\r\n            (props) => {\r\n              return (\r\n                <button className={styles.googleLoginBtnBtn} onClick={props.onClick} disabled={props.disabled}>\r\n                  <div className={styles.googleLoginBtn}>\r\n                    <img className={styles.googleLogoImage} src={gLogo} alt=\"\"/>\r\n                    <span>Sign in with Google</span>\r\n                  </div>\r\n                </button>\r\n              )\r\n            }\r\n          }\r\n          buttonText={\"Login\"}\r\n          onSuccess={onSuccessCallback}\r\n          onFailure={onSuccessCallback}\r\n          cookiePolicy={'single_host_origin'}\r\n          isSignedIn={true}\r\n          />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\GenreBooksPage\\GenreBooksPage.tsx",["108","109"],"import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './GenreBooksPage.module.css';\r\nimport fantasyImg from '../../images/fantasyHeader.png'\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport {GenreGetInterface} from '../../interfaces/GenreGetInterface'\r\n\r\nconst genreMap:any = {\r\n  \"fantasy&fiction\" : {\r\n    \"name\" : \"Fantasy & Fiction\",\r\n    \"image\": fantasyImg\r\n  }\r\n}\r\n\r\nconst GenreBooksPage:React.FC<{match : any}> = ({match}) => {\r\n\r\n  const [genreData, setGenreData] = useState<GenreGetInterface>();\r\n\r\n  const {\r\n    params: {genreName},\r\n  } = match;\r\n  const loc = \"../../images/fantasyHeader.png\";\r\n\r\n  console.log(genreName);\r\n\r\n  const fetchGenre = () => {\r\n    axios.get('/api/genre', {\r\n      params: {\r\n        genrePath: genreName\r\n      }\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setGenreData(response.data);\r\n        // setBookDetails(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Server down!\")\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchGenre();\r\n  }, [genreName])\r\n\r\n  return (\r\n    <div className={styles.genreBookPageOuterContainer}>\r\n      <div className={styles.genreBookPageContainer}>\r\n        <div className={styles.headerForGenre}>\r\n          <span className={styles.genreName}>{genreMap[genreName].name}</span>\r\n        </div>\r\n\r\n        <div className={styles.booksListContainer}>\r\n          {\r\n            genreData?.genreBooks.map((book, index) => {\r\n              return <BookCard book={book}/>\r\n            })\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n      \r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BookCard:React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bookCardContainer}>\r\n      <img className={styles.bookImage} onClick={onBookClick} src={`${book.cover}`} alt=\"Book1\"/>\r\n      <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n      <span className={styles.bookAuthor}>by {book.author}</span>\r\n      <span className={styles.bookCost}>₹{book.cost}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenreBooksPage;","C:\\Users\\ravi\\Documents\\WebDevelopment\\Taperback\\taperback\\src\\pages\\CartViewPage\\CartViewPage.tsx",["110","111","112"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './CartViewPage.module.css';\r\nimport {Book} from '../../interfaces/BookInterface';\r\nimport StarDisplay from '../../components/StarDisplay/StarDisplay';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\n\r\nconst CartViewPage = () => {\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  let cartId:string = \"\";\r\n  const [cart, setCart] = useState<Array<Book>>([]);\r\n  const [cartTotalCost, setCartTotalCost] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if(user == null){\r\n      history.replace({pathname: \"/login\"});\r\n    }else{\r\n      cartId = user.user.cart;\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(cartId !== \"\"){\r\n      // fetch cart with book Items from api\r\n      axios.get(\"/api/getCart\", {\r\n        params: {cartId: cartId}\r\n      }).then((res) => {\r\n        setCart(res.data);\r\n      }).catch((err) => {\r\n        alert(\"Server Error!\")\r\n      })\r\n    }\r\n  },[cartId])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let totalCost = 0;\r\n    for(let i = 0; i < cart.length; i++){\r\n      totalCost += Number(cart[i].cost);\r\n    }\r\n    setCartTotalCost(totalCost);\r\n  }, [cart])\r\n\r\n  return (\r\n    <div className={styles.cartViewPageOuterContainer}>\r\n      <div className={styles.cartViewPageContainer}>\r\n        <div className={styles.cartListPane}>\r\n          <div className={styles.cartHeader}>\r\n            <span>Your Cart</span>\r\n            <div className={styles.orangeLine}></div>\r\n          </div>\r\n          <div className={styles.cartListContainer}>\r\n            {\r\n              cart.map((book, index) => {\r\n                return <CartBookCard key={index} book={book} />\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className={styles.payDetailsPane}>\r\n          <div className={styles.payDetailsContainer}>\r\n            <span className={styles.pricingHeader}>Pricing Details</span>\r\n            <div className={styles.priceSheetContainer}>\r\n              <table className={styles.priceSheetTable}>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Books Total</td>\r\n                  <td className={styles.priceTag}>Rs. {cartTotalCost}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>GST Total</td>\r\n                  <td className={styles.priceTag}>Rs. 50</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Delivery Charges</td>\r\n                  <td className={styles.priceTag}>Rs. 60</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div className={styles.splitLineOrange}></div>\r\n            <table className={styles.totalTable}>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Total</td>\r\n                  <td className={styles.priceTag}>Rs. {cartTotalCost + 110}</td>\r\n                </tr>\r\n              </table>\r\n            <button className={styles.checkoutBtn}>Checkout</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst CartBookCard: React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cartBookCard}>\r\n      <img className={styles.bookCoverImage} onClick={onBookClick} src={`${book.cover}`} alt={`${book.title}`}/>\r\n      <div className={styles.bookInfoContainer}>\r\n        <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n        {\r\n          (book.subtitle != \"\") &&<span className={styles.bookSubtitle}>({book.subtitle})</span>\r\n        }\r\n        <span className={styles.bookAuthor}>{book.author}</span>\r\n        <StarDisplay value={parseFloat(`${book.ratings}`)} size={'20px'}/>\r\n        <span className={styles.bookCost}>₹{book.cost}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartViewPage;",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":26,"nodeType":"119","messageId":"120","endLine":1,"endColumn":35},{"ruleId":"117","severity":1,"message":"121","line":3,"column":41,"nodeType":"119","messageId":"120","endLine":3,"endColumn":45},{"ruleId":"117","severity":1,"message":"122","line":3,"column":47,"nodeType":"119","messageId":"120","endLine":3,"endColumn":58},{"ruleId":"117","severity":1,"message":"123","line":50,"column":9,"nodeType":"119","messageId":"120","endLine":50,"endColumn":29},{"ruleId":"117","severity":1,"message":"124","line":52,"column":19,"nodeType":"119","messageId":"120","endLine":52,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":2,"column":9,"nodeType":"119","messageId":"120","endLine":2,"endColumn":13},{"ruleId":"117","severity":1,"message":"125","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":24},{"ruleId":"117","severity":1,"message":"126","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":22,"column":6,"nodeType":"129","endLine":22,"endColumn":13,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"131","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"132","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"127","severity":1,"message":"133","line":13,"column":6,"nodeType":"129","endLine":13,"endColumn":13,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"135","line":32,"column":6,"nodeType":"129","endLine":32,"endColumn":13,"suggestions":"136"},{"ruleId":"117","severity":1,"message":"131","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":1,"column":26,"nodeType":"119","messageId":"120","endLine":1,"endColumn":35},{"ruleId":"117","severity":1,"message":"131","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"137","line":14,"column":16,"nodeType":"119","messageId":"120","endLine":14,"endColumn":23},{"ruleId":"127","severity":1,"message":"138","line":19,"column":6,"nodeType":"129","endLine":19,"endColumn":12,"suggestions":"139"},{"ruleId":"117","severity":1,"message":"140","line":30,"column":10,"nodeType":"119","messageId":"120","endLine":30,"endColumn":14},{"ruleId":"117","severity":1,"message":"141","line":23,"column":9,"nodeType":"119","messageId":"120","endLine":23,"endColumn":12},{"ruleId":"127","severity":1,"message":"142","line":45,"column":6,"nodeType":"129","endLine":45,"endColumn":17,"suggestions":"143"},{"ruleId":"117","severity":1,"message":"137","line":11,"column":16,"nodeType":"119","messageId":"120","endLine":11,"endColumn":23},{"ruleId":"127","severity":1,"message":"144","line":20,"column":16,"nodeType":"145","endLine":20,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":112,"column":26,"nodeType":"148","messageId":"149","endLine":112,"endColumn":28},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useLocation' is defined but never used.","'CLIENT_SECRET' is assigned a value but never used.","'loaded' is assigned a value but never used.","'bestSellersImage' is defined but never used.","'bookImg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSearchResults'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'useState' is defined but never used.","'BookSection' is defined but never used.","React Hook useEffect has a missing dependency: 'getStars'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'fetchBookDetails'. Either include it or remove the dependency array.",["154"],"'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["155"],"'user' is assigned a value but never used.","'loc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchGenre'. Either include it or remove the dependency array.",["156"],"Assignments to the 'cartId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [fetchSearchResults, query]",{"range":"167","text":"168"},"Update the dependencies array to be: [getStars, value]",{"range":"169","text":"170"},"Update the dependencies array to be: [fetchBookDetails, match]",{"range":"171","text":"172"},"Update the dependencies array to be: [history, user]",{"range":"173","text":"174"},"Update the dependencies array to be: [fetchGenre, genreName]",{"range":"175","text":"176"},[725,732],"[fetchSearchResults, query]",[459,466],"[getStars, value]",[820,827],"[fetchBookDetails, match]",[631,637],"[history, user]",[1160,1171],"[fetchGenre, genreName]"]