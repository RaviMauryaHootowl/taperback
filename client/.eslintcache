[{"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\index.tsx":"1","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\App.tsx":"3","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\contexts\\UserContext.ts":"4","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\Home.tsx":"5","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\OrderCompletePage\\OrderCompletePage.tsx":"6","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\CartViewPage\\CartViewPage.tsx":"7","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\BuyPage\\BuyPage.tsx":"8","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\ViewOrdersPage\\ViewOrdersPage.tsx":"9","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\GenreBooksPage\\GenreBooksPage.tsx":"10","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\BookViewPage\\BookViewPage.tsx":"11","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\SearchPage\\SearchPage.tsx":"12","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\AccountPage\\AccountPage.tsx":"13","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\LoginPage\\LoginPage.tsx":"14","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Navbar\\Navbar.tsx":"15","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Footer\\Footer.tsx":"16","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\HomeBookSection\\BookSection.tsx":"17","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\RippleButton\\RippleButton.tsx":"18","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\HomeHero\\HeroSection.tsx":"19","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\StarDisplay\\StarDisplay.tsx":"20","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Loader\\Loader.tsx":"21","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\BookDetails\\BookDetails.tsx":"22","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\SearchList\\SearchList.tsx":"23","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\SlideMenu\\SlideMenu.tsx":"24","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Menu\\Menu.tsx":"25","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\ResizeHook.tsx":"26","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\StripeContainer\\StripeContainer.tsx":"27","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\StripeContainer\\PaymentForm.tsx":"28"},{"size":517,"mtime":1630554497701,"results":"29","hashOfConfig":"30"},{"size":440,"mtime":1630554497728,"results":"31","hashOfConfig":"30"},{"size":2425,"mtime":1630554497601,"results":"32","hashOfConfig":"30"},{"size":92,"mtime":1630554497631,"results":"33","hashOfConfig":"30"},{"size":365,"mtime":1630561492176,"results":"34","hashOfConfig":"30"},{"size":2518,"mtime":1630554497721,"results":"35","hashOfConfig":"30"},{"size":5044,"mtime":1630554497714,"results":"36","hashOfConfig":"30"},{"size":5081,"mtime":1630565062289,"results":"37","hashOfConfig":"30"},{"size":2742,"mtime":1630554497726,"results":"38","hashOfConfig":"30"},{"size":3803,"mtime":1630554497716,"results":"39","hashOfConfig":"30"},{"size":1101,"mtime":1630554497710,"results":"40","hashOfConfig":"30"},{"size":1319,"mtime":1630554497724,"results":"41","hashOfConfig":"30"},{"size":2493,"mtime":1630554497707,"results":"42","hashOfConfig":"30"},{"size":2984,"mtime":1630554497719,"results":"43","hashOfConfig":"30"},{"size":6123,"mtime":1630554497620,"results":"44","hashOfConfig":"30"},{"size":438,"mtime":1630554497608,"results":"45","hashOfConfig":"30"},{"size":2671,"mtime":1630554497611,"results":"46","hashOfConfig":"30"},{"size":1223,"mtime":1630554497623,"results":"47","hashOfConfig":"30"},{"size":1883,"mtime":1630554497613,"results":"48","hashOfConfig":"30"},{"size":1541,"mtime":1630554497630,"results":"49","hashOfConfig":"30"},{"size":764,"mtime":1630554497615,"results":"50","hashOfConfig":"30"},{"size":3131,"mtime":1630554497605,"results":"51","hashOfConfig":"30"},{"size":1930,"mtime":1630554497625,"results":"52","hashOfConfig":"30"},{"size":1521,"mtime":1630554497628,"results":"53","hashOfConfig":"30"},{"size":612,"mtime":1630554497617,"results":"54","hashOfConfig":"30"},{"size":1097,"mtime":1630554497602,"results":"55","hashOfConfig":"30"},{"size":653,"mtime":1630563417405,"results":"56","hashOfConfig":"30"},{"size":2501,"mtime":1630565175395,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"mhmb5m",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"60"},"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\index.tsx",[],["135","136"],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\App.tsx",["137","138","139"],"import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Link, useLocation} from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport SearchPage from './pages/SearchPage/SearchPage';\r\nimport BookViewPage from './pages/BookViewPage/BookViewPage';\r\nimport OrderCompletePage from './pages/OrderCompletePage/OrderCompletePage';\r\nimport { UserContext } from './contexts/UserContext';\r\nimport LoginPage from './pages/LoginPage/LoginPage';\r\nimport GenreBooksPage from './pages/GenreBooksPage/GenreBooksPage';\r\nimport CartViewPage from './pages/CartViewPage/CartViewPage';\r\nimport BuyPage from './pages/BuyPage/BuyPage';\r\nimport axios from 'axios';\r\nimport ViewOrdersPage from './pages/ViewOrdersPage/ViewOrdersPage';\r\nimport AccountPage from './pages/AccountPage/AccountPage';\r\nimport PhoneScreen from './components/PhoneScreen/PhoneScreen';\r\n\r\n\r\nconst App:React.FC = () => {\r\n  const [user, setUser] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const userStored = localStorage.getItem(\"gAuth\");\r\n    if(userStored !== null){\r\n      const storedUserObject = JSON.parse(userStored);\r\n      refreshUser(storedUserObject);\r\n    }\r\n  }, [])\r\n\r\n  const refreshUser = (userObject) => {\r\n    axios.post(\"/api/userLoginFast\", {userGoogleId : userObject.user.googleId}).then(res => {\r\n      console.log(res.data);\r\n      setUser({user: res.data, tokenId: userObject.tokenId, imageUrl: userObject.imageUrl})\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={{user, setUser}}>\r\n        <div>\r\n          <Navbar/>\r\n        </div>\r\n        <Route path=\"/\" exact component={Home}/>\r\n        <Route path=\"/login\" exact component={LoginPage}/>\r\n        <Route path=\"/search\" component={SearchPage}/>\r\n        <Route path=\"/cart\" exact component={CartViewPage}/>\r\n        <Route path=\"/orders\" exact component={ViewOrdersPage}/>\r\n        <Route path=\"/checkout\" exact component={BuyPage}/>\r\n        <Route path=\"/ordercomplete\" exact component={OrderCompletePage}/>\r\n        <Route path=\"/account\" exact component={AccountPage}/>\r\n        <Route path=\"/book/:bookId\" component={BookViewPage}/>\r\n        <Route path=\"/genre/:genreName\" component={GenreBooksPage}/>\r\n      </UserContext.Provider>\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\contexts\\UserContext.ts",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\Home.tsx",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\OrderCompletePage\\OrderCompletePage.tsx",["140","141","142","143"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './OrderCompletePage.module.css';\r\nimport {Book} from '../../interfaces/BookInterface';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\nimport RippleButton from '../../components/RippleButton/RippleButton';\r\n\r\nconst OrderCompletePage = ({location}) => {\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [cart, setCart] = useState<Array<Book>>([]);\r\n  const [cartId, setCartId] = useState<string>(\"\");\r\n  const [cartTotalCost, setCartTotalCost] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if(location.state == null){\r\n      history.replace({pathname: \"/login\"});\r\n    }else{\r\n      setCart(location.state.cart);\r\n      setCartId(location.state.cartId);\r\n    }\r\n    \r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    if(user == null){\r\n      history.replace({pathname: \"/login\"});\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    let totalCost = 0;\r\n    for(let i = 0; i < cart.length; i++){\r\n      totalCost += Number(cart[i].cost);\r\n    }\r\n    setCartTotalCost(totalCost);\r\n  }, [cart])\r\n\r\n  return (\r\n    <div className={styles.cartViewPageOuterContainer}>\r\n      <div className={styles.cartViewPageContainer}>\r\n        <div className={styles.cartListPane}>\r\n          <div className={styles.cartHeader}>\r\n            <span>Order Successful</span>\r\n            <div className={styles.orangeLine}></div>\r\n          </div>\r\n          \r\n          <div className={styles.orderDetailsContainer}>\r\n            <span className={styles.orderHeader}>Order Details</span>\r\n            <div className={styles.orderDetailsInnerContainer}>\r\n              <span className={styles.orderDetails}>Order Number : {cartId}</span>\r\n              <span className={styles.orderDetails}>Status : Ordered</span>\r\n            </div>\r\n            <div className={styles.splitLineOrange}></div>\r\n            <table className={styles.totalTable}>\r\n              <tr>\r\n                <td className={styles.priceLabel}>Total</td>\r\n                <td className={styles.priceTag}>Rs. {cartTotalCost + 110}</td>\r\n              </tr>\r\n            </table>\r\n            <RippleButton onClick={() => {\r\n                history.replace(\"/\");\r\n              }} css={{alignSelf:\"flex-end\"}}>Go to Home</RippleButton>\r\n            </div>\r\n          </div>\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default OrderCompletePage;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\CartViewPage\\CartViewPage.tsx",["144"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './CartViewPage.module.css';\r\nimport emptyCartImg from '../../images/emptycart.svg'\r\nimport {Book} from '../../interfaces/BookInterface';\r\nimport StarDisplay from '../../components/StarDisplay/StarDisplay';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport RippleButton from '../../components/RippleButton/RippleButton';\r\n\r\nconst CartViewPage = () => {\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [cartId, setCartId] = useState<string>(\"\");\r\n  const [cart, setCart] = useState<Array<Book>>([]);\r\n  const [cartTotalCost, setCartTotalCost] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if(user == null){\r\n      //history.replace({pathname: \"/login\"});\r\n    }else{\r\n      setCartId(user.user.cart);\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    \r\n    console.log(`cartId: ${cartId}`)\r\n    if(cartId !== \"\" && cartId !== \"0\"){\r\n      setIsLoading(true);\r\n      // fetch cart with book Items from api\r\n      axios.get(\"/api/getCart\", {\r\n        params: {cartId: cartId}\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        setCart(res.data);\r\n        setIsLoading(false)\r\n      }).catch((err) => {\r\n        alert(\"Server Error!\")\r\n        setIsLoading(false)\r\n      })\r\n    }else{\r\n      setIsLoading(false);\r\n    }\r\n  },[cartId])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let totalCost = 0;\r\n    for(let i = 0; i < cart.length; i++){\r\n      totalCost += Number(cart[i].cost);\r\n    }\r\n    setCartTotalCost(totalCost);\r\n  }, [cart])\r\n\r\n  return (\r\n    <div className={styles.cartViewPageOuterContainer}>\r\n      <div className={styles.cartViewPageContainer}>\r\n        <div className={styles.cartListPane}>\r\n          <div className={styles.cartHeader}>\r\n            <span>Your Cart</span>\r\n            <div className={styles.orangeLine}></div>\r\n          </div>\r\n          {(cart && !isLoading && cart.length === 0) && <div className={styles.cartEmptyContainer}>\r\n            <img className={styles.cartEmptyImg} src={emptyCartImg} alt=\"\"/>\r\n          </div>}\r\n          \r\n          <div className={styles.cartListContainer}>\r\n            {\r\n              (isLoading) ? <div className={styles.loaderDiv}><Loader size={50} border={8} color={\"#FC7B03\"}/></div> : cart.map((book, index) => {\r\n                return <CartBookCard key={index} book={book} />\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        {(cart && cart.length > 0) && <div className={styles.payDetailsPane}>\r\n          <div className={styles.payDetailsContainer}>\r\n            <span className={styles.pricingHeader}>Pricing Details</span>\r\n            <div className={styles.priceSheetContainer}>\r\n              <table className={styles.priceSheetTable}>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Books Total</td>\r\n                  <td className={styles.priceTag}>Rs. {cartTotalCost}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>GST Total</td>\r\n                  <td className={styles.priceTag}>Rs. 50</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Delivery Charges</td>\r\n                  <td className={styles.priceTag}>Rs. 60</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div className={styles.splitLineOrange}></div>\r\n            <table className={styles.totalTable}>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Total</td>\r\n                  <td className={styles.priceTag}>Rs. {cartTotalCost + 110}</td>\r\n                </tr>\r\n              </table>\r\n            <RippleButton onClick={() => {\r\n              history.push({pathname:'/checkout', state:{cart : cart, cartId: cartId}});\r\n            }}>Checkout</RippleButton>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst CartBookCard: React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cartBookCard}>\r\n      <img className={styles.bookCoverImage} onClick={onBookClick} src={`${book.cover}`} alt={`${book.title}`}/>\r\n      <div className={styles.bookInfoContainer}>\r\n        <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n        {\r\n          (book.subtitle !== \"\") &&<span className={styles.bookSubtitle}>({book.subtitle})</span>\r\n        }\r\n        <span className={styles.bookAuthor}>{book.author}</span>\r\n        <StarDisplay value={parseFloat(`${book.ratings}`)} size={'20px'}/>\r\n        <span className={styles.bookCost}>₹{book.cost}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartViewPage;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\BuyPage\\BuyPage.tsx",["145","146","147","148"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './BuyPage.module.css';\r\nimport {Book} from '../../interfaces/BookInterface';\r\nimport StarDisplay from '../../components/StarDisplay/StarDisplay';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\nimport RippleButton from '../../components/RippleButton/RippleButton';\r\nimport StripeContainer from '../../components/StripeContainer/StripeContainer';\r\n\r\nconst BuyPage = ({location}) => {\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [cart, setCart] = useState<Array<Book>>([]);\r\n  const [cartId, setCartId] = useState<string>(\"\");\r\n  const [cartTotalCost, setCartTotalCost] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if(location.state == null){\r\n      history.replace({pathname: \"/login\"});\r\n    }else{\r\n      setCart(location.state.cart);\r\n      console.log(\"Location CartId : \" + location.state.cartId);\r\n      setCartId(location.state.cartId);\r\n    }\r\n    \r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    if(user == null){\r\n      history.replace({pathname: \"/login\"});\r\n    }\r\n  }, [])\r\n\r\n\r\n  const confirmPurchaseClick = () => {\r\n    if(address.trim() === \"\"){\r\n      alert(\"Enter a valid Shipping Address\");\r\n      return;\r\n    }\r\n    \r\n    const userGoogleId = user.user.googleId;\r\n    const tokenId = user.tokenId;\r\n\r\n    axios.post(\"/api/orderCart\", {tokenId, cartId: cartId, userGoogleId, address}).then(res => {\r\n      console.log(res.data);\r\n      const {message} = res.data;\r\n      if(message === \"ordered\"){\r\n        alert(\"Your Order has been placed.\")\r\n        // refresh your user\r\n        refreshUser();\r\n      }\r\n    })\r\n  }\r\n\r\n  const errorInPayement = () => {\r\n    alert(\"Some Error Occurred!\");\r\n  }\r\n\r\n  const refreshUser = () => {\r\n    axios.get(\"/api/refreshUser\", {params: {userGoogleId: user.user.googleId}}).then((res) => {\r\n      const updatedUser = user;\r\n      updatedUser.user = res.data;\r\n      setUser({...updatedUser});\r\n      //history.replace(\"/\");\r\n      history.push({pathname:'/ordercomplete', state:{cart : cart, cartId: cartId}});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let totalCost = 0;\r\n    for(let i = 0; i < cart.length; i++){\r\n      totalCost += Number(cart[i].cost);\r\n    }\r\n    setCartTotalCost(totalCost);\r\n  }, [cart])\r\n\r\n  return (\r\n    <div className={styles.cartViewPageOuterContainer}>\r\n      <div className={styles.cartViewPageContainer}>\r\n        <div className={styles.cartListPane}>\r\n          <div className={styles.cartHeader}>\r\n            <span>Your Cart</span>\r\n            <div className={styles.orangeLine}></div>\r\n          </div>\r\n          <div className={styles.cartListContainer}>\r\n            {\r\n              cart.map((book, index) => {\r\n                return <CartBookCard key={index} book={book} />\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className={styles.payDetailsPane}>\r\n          <div className={styles.payDetailsContainer}>\r\n            <span className={styles.pricingHeader}>Shipping Details</span>\r\n            <div className={styles.addressContainer}>\r\n              <span className={styles.addressHeader}>Shipping Address</span>\r\n              <textarea value={address} onChange={(e) => {setAddress(e.target.value)}} className={styles.addressTextArea} placeholder={\"Your books will be delivered on this Address.\\nMake sure the address is correct.\"}></textarea>\r\n            </div>\r\n            <span className={styles.paymentHeader}>Payment Method</span>\r\n            <StripeContainer amount={cartTotalCost + 110} buyCallBack={confirmPurchaseClick} errorCallback={errorInPayement}/>\r\n            <div className={styles.splitLineOrange}></div>\r\n            <table className={styles.totalTable}>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Total</td>\r\n                  <td className={styles.priceTag}>Rs. {cartTotalCost + 110}</td>\r\n                </tr>\r\n              </table>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst CartBookCard: React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cartBookCard}>\r\n      <img className={styles.bookCoverImage} onClick={onBookClick} src={`${book.cover}`} alt={`${book.title}`}/>\r\n      <div className={styles.bookInfoContainer}>\r\n        <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n        {\r\n          (book.subtitle != \"\") &&<span className={styles.bookSubtitle}>({book.subtitle})</span>\r\n        }\r\n        <span className={styles.bookAuthor}>{book.author}</span>\r\n        <StarDisplay value={parseFloat(`${book.ratings}`)} size={'20px'}/>\r\n        <span className={styles.bookCost}>₹{book.cost}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuyPage;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\ViewOrdersPage\\ViewOrdersPage.tsx",["149","150","151","152"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './ViewOrdersPage.module.css';\r\nimport {Book} from '../../interfaces/BookInterface';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\n\r\nconst ViewOrdersPage = ({location}) => {\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  const [ordersList, setOrdersList] = useState<Array<any>>([]);\r\n\r\n  useEffect(() => {\r\n    // if(user == null){\r\n    //   history.replace({pathname: \"/login\"});\r\n    // }else{\r\n    //   fetchOrders();\r\n    // }\r\n    if(user !== null){\r\n      fetchOrders();\r\n    }\r\n  }, [user])\r\n\r\n  const fetchOrders = () => {\r\n    axios.get(\"/api/getOrders\", {\r\n      params: {\r\n        userGoogleId: user.user.googleId\r\n      }\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      setOrdersList(res.data.orders);\r\n    }).catch((err) => {\r\n      alert(\"Server Error!\")\r\n    })\r\n  }\r\n\r\n  const getOrderStatus = (orderStatusNumber) => {\r\n    switch (orderStatusNumber) {\r\n      case 0:\r\n        return \"In Cart\"\r\n      case 1:\r\n        return \"Ordered\"\r\n      case 2: \r\n        return \"Shipped\"\r\n      case 3:\r\n        return \"Delivered\"\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   let totalCost = 0;\r\n  //   for(let i = 0; i < cart.length; i++){\r\n  //     totalCost += Number(cart[i].cost);\r\n  //   }\r\n  //   setCartTotalCost(totalCost);\r\n  // }, [])\r\n\r\n  return (\r\n    <div className={styles.cartViewPageOuterContainer}>\r\n      <div className={styles.cartViewPageContainer}>\r\n        <div className={styles.cartListPane}>\r\n          <div className={styles.cartHeader}>\r\n            <span>Your Orders</span>\r\n            <div className={styles.orangeLine}></div>\r\n          </div>\r\n          \r\n          {ordersList.map((order, index) => {\r\n            return <div className={styles.orderDetailsContainer}>\r\n              <span className={styles.orderHeader}>Order Details</span>\r\n              <div className={styles.orderDetailsInnerContainer}>\r\n                <span className={styles.orderDetails}>Order Number : {order._id}</span>\r\n                <span className={styles.orderDetails}>Status : {getOrderStatus(order.status)}</span>\r\n              </div>\r\n              <div className={styles.splitLineOrange}></div>\r\n              <table className={styles.totalTable}>\r\n                <tr>\r\n                  <td className={styles.priceLabel}>Total</td>\r\n                  <td className={styles.priceTag}>Rs. {order.cost}</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          })\r\n          }\r\n        </div>   \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ViewOrdersPage;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\GenreBooksPage\\GenreBooksPage.tsx",["153"],"import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './GenreBooksPage.module.css';\r\nimport fantasyImg from '../../images/fantasyHeader.png'\r\nimport childrensImg from '../../images/childrensHeader.png'\r\nimport historyImg from '../../images/historyHeader.png'\r\nimport horrorImg from '../../images/horrorHeader.png'\r\nimport msyteryImg from '../../images/mysteryHeader.png'\r\nimport nonfictionImg from '../../images/nonfictionHeader.png'\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport {GenreGetInterface} from '../../interfaces/GenreGetInterface'\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst genreMap:any = {\r\n  \"fantasy&fiction\" : {\r\n    \"name\" : \"Fantasy & Fiction\",\r\n    \"image\": fantasyImg,\r\n    \"textColor\": \"#000000\",\r\n    \"shadowColor\": \"#ffffff\"\r\n  },\r\n  \"childrens\" : {\r\n    \"name\" : \"Children's\",\r\n    \"image\": childrensImg,\r\n    \"textColor\": \"#ffffff\",\r\n    \"shadowColor\": \"#000000\"\r\n  },\r\n  \"history\" : {\r\n    \"name\" : \"History\",\r\n    \"image\": historyImg,\r\n    \"textColor\": \"#ffffff\",\r\n    \"shadowColor\": \"#000000\"\r\n  },\r\n  \"horror\" : {\r\n    \"name\" : \"Horror\",\r\n    \"image\": horrorImg,\r\n    \"textColor\": \"#ffffff\",\r\n    \"shadowColor\": \"#000000\"\r\n  },\r\n  \"mystery\" : {\r\n    \"name\" : \"Mystery\",\r\n    \"image\": msyteryImg,\r\n    \"textColor\": \"#ffffff\",\r\n    \"shadowColor\": \"#000000\"\r\n  },\r\n  \"nonfiction\" : {\r\n    \"name\" : \"Non-Fiction\",\r\n    \"image\": nonfictionImg,\r\n    \"textColor\": \"#ffffff\",\r\n    \"shadowColor\": \"#000000\"\r\n  }\r\n}\r\n\r\nconst GenreBooksPage:React.FC<{match : any}> = ({match}) => {\r\n\r\n  const [genreData, setGenreData] = useState<GenreGetInterface>();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [genreName, setGenreName] = useState<string>(match.params.genreName);\r\n\r\n  useEffect(() => {\r\n    setGenreName(match.params.genreName);\r\n  }, [match])\r\n\r\n  const fetchGenre = () => {\r\n    setIsLoading(true);\r\n    axios.get('/api/genre', {\r\n      params: {\r\n        genrePath: genreName\r\n      }\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setGenreData(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Server down!\")\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchGenre();\r\n  }, [genreName])\r\n\r\n  return (\r\n    <div className={styles.genreBookPageOuterContainer}>\r\n      <div className={styles.genreBookPageContainer}>\r\n        <div className={styles.headerForGenre} style={{ backgroundImage: `url(${genreMap[genreName].image})` }}>\r\n          <span className={styles.genreName} style={{color: `${genreMap[genreName].textColor}`, textShadow: `${genreMap[genreName].shadowColor} 2px 2px 10px`}}>{genreMap[genreName].name}</span>\r\n        </div>\r\n\r\n        {(isLoading) ? <div className={styles.loaderDiv}><Loader size={50} border={8} color={\"#FC7B03\"}/></div> : <div className={styles.booksListContainer}>\r\n          {\r\n            genreData?.genreBooks.map((book, index) => {\r\n              return <BookCard book={book}/>\r\n            })\r\n          }\r\n        </div>}\r\n\r\n      </div>\r\n      \r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BookCard:React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bookCardContainer}>\r\n      <img className={styles.bookImage} onClick={onBookClick} src={`${book.cover}`} alt=\"Book1\"/>\r\n      <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n      <span className={styles.bookAuthor}>by {book.author}</span>\r\n      <span className={styles.bookCost}>₹{book.cost}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenreBooksPage;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\BookViewPage\\BookViewPage.tsx",["154","155"],"import React, {useState, useEffect} from 'react';\r\nimport BookDetails from '../../components/BookDetails/BookDetails';\r\nimport axios from 'axios';\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport styles from './BookViewPage.module.css';\r\n\r\nconst BookViewPage:React.FC<{match : any}> = ({match}) => {\r\n\r\n  const {\r\n    params: {bookId},\r\n  } = match;\r\n\r\n  const [bookDetails, setBookDetails] = useState<Book|null>(null);\r\n\r\n  const fetchBookDetails = () => {\r\n    axios.get('/api/findBook', {\r\n      params: {\r\n        bookId: bookId\r\n      }\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setBookDetails(response.data);\r\n      })\r\n      .catch((error) => {\r\n        const {statusCode, message} = error.response.data;\r\n        alert(message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBookDetails();\r\n  }, [match])\r\n\r\n  return (\r\n    <div className={styles.booksViewPageContainer}>\r\n      {\r\n        (bookDetails != null) ? <BookDetails bookDetails={bookDetails} /> : <div></div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default BookViewPage;\r\n","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\SearchPage\\SearchPage.tsx",["156"],"import React, {useState, useEffect} from 'react';\r\nimport styles from './SearchPage.module.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport queryString from 'querystring';\r\nimport axios from 'axios';\r\nimport SearchList from '../../components/SearchList/SearchList';\r\n\r\nimport {Book} from '../../interfaces/BookInterface'\r\n\r\nconst SearchPage = () => {\r\n  const history = useHistory();\r\n  const [query, setQuery] = useState<string>(\"\");\r\n  const [bookData, setBookData] = useState<Array<Book>>([]);\r\n  const [isLoading ,setIsLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setQuery(`${queryString.parse(history.location.search)[\"?query\"]}`);\r\n  }, [history.location.search]);\r\n\r\n  useEffect(() => {\r\n    if(query !== \"\"){\r\n      fetchSearchResults();\r\n    }\r\n  }, [query])\r\n\r\n  const fetchSearchResults = () => {\r\n    axios.get('/api/search', {\r\n      params: {\r\n        query: query\r\n      }\r\n    })\r\n    .then(function (response) {\r\n      setBookData(response.data);\r\n      setIsLoading(false);\r\n    })\r\n    .catch(function (error) {\r\n      alert(\"Server down!\")\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchPageContainer}>\r\n      <SearchList bookData={bookData} isLoading={isLoading}/>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\AccountPage\\AccountPage.tsx",["157"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useGoogleLogout } from 'react-google-login';\r\nimport { useHistory } from 'react-router';\r\nimport RippleButton from '../../components/RippleButton/RippleButton';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport styles from './AccountPage.module.css';\r\n\r\n\r\nconst AccountPage = () => {\r\n  const history = useHistory();\r\n  const [accountUser, setAccountUser] = useState<any|null>(null);\r\n  const {user, setUser} = useContext(UserContext);\r\n\r\n\r\n  const CLIENT_ID:string = process.env.REACT_APP_CLIENT_ID || \"\";\r\n\r\n  useEffect(() => {\r\n    if(user !== null){\r\n      setAccountUser(user);\r\n    }\r\n  }, [user])\r\n\r\n  const {signOut, loaded} = useGoogleLogout({\r\n    clientId : CLIENT_ID,\r\n    onLogoutSuccess: () => {\r\n      onLogOutSuccess();\r\n    }\r\n  })\r\n\r\n  const onLogOutSuccess = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"gAuth\");\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  function createRipple(event) {\r\n    const button = event.currentTarget;\r\n  \r\n    const circle = document.createElement(\"span\");\r\n    const diameter = Math.max(button.clientWidth, button.clientHeight);\r\n    const radius = diameter / 2;\r\n  \r\n    circle.style.width = circle.style.height = `${diameter}px`;\r\n    circle.style.left = `${event.clientX - button.offsetLeft - radius}px`;\r\n    circle.style.top = `${event.clientY - button.offsetTop - radius}px`;\r\n    circle.classList.add(\"ripple\");\r\n  \r\n    const ripple = button.getElementsByClassName(\"ripple\")[0];\r\n  \r\n    if (ripple) {\r\n      ripple.remove();\r\n    }\r\n  \r\n    button.appendChild(circle);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const button = document.getElementsByTagName(\"button\")[0];\r\n    button.addEventListener(\"click\", createRipple);\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.accountPageContainer}>\r\n      {(accountUser !== null) && <div className={styles.accountPageInnerContainer}>\r\n        <div>\r\n          <img className={styles.userProfileImage} src={accountUser.imageUrl} alt=\"\"/>\r\n        </div>\r\n        <div className={styles.userInfoContainer}>\r\n          <span className={styles.userName}>{accountUser.user.name}</span>\r\n          <span className={styles.userEmail}>{accountUser.user.email}</span>\r\n          {/* <button className={styles.logoutBtn} onClick={() => {}}>Logout</button> */}\r\n          <RippleButton onClick={signOut}>Logout</RippleButton>\r\n        </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountPage;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\pages\\LoginPage\\LoginPage.tsx",["158","159","160"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './LoginPage.module.css';\r\nimport logo from '../../images/logo.svg'\r\nimport gLogo from '../../images/googlelogo.png'\r\nimport {GoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline} from 'react-google-login';\r\nimport {UserContext} from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\n\r\nconst LoginPage:React.FC = () => {\r\n\r\n  const history = useHistory();\r\n  const {user, setUser} = useContext(UserContext);\r\n  useEffect(() => {\r\n    if(user != null){\r\n\r\n      history.replace(\"/\")\r\n    } \r\n  }, [user])\r\n\r\n  return(\r\n    <div className={styles.loginPageContainer}>\r\n      <LoginCard />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LoginCard = () => {\r\n\r\n  const {user, setUser} = useContext(UserContext);\r\n  const CLIENT_ID:string = process.env.REACT_APP_CLIENT_ID || \"\";\r\n  const [isLoading , setIsLoading] = useState<boolean>(false);\r\n\r\n  const onSuccessCallback = (response : GoogleLoginResponse | GoogleLoginResponseOffline) =>{\r\n    console.log(\"Logged In\");\r\n    //alert(JSON.stringify(response))\r\n    setIsLoading(true);\r\n    const userProfileObj = (response as GoogleLoginResponse).profileObj;\r\n    axios.post(\"/api/userLogin\", {user : (response as GoogleLoginResponse).profileObj}).then(res => {\r\n      setUser({user: res.data, tokenId: (response as GoogleLoginResponse).tokenId, imageUrl: userProfileObj.imageUrl})\r\n      localStorage.setItem(\"gAuth\", JSON.stringify({user: res.data, tokenId: (response as GoogleLoginResponse).tokenId, imageUrl: userProfileObj.imageUrl}));\r\n      setIsLoading(false);\r\n    }).catch((err) => {\r\n      alert(\"There was an error!\")\r\n      setIsLoading(false);\r\n    });\r\n    \r\n\r\n  }\r\n\r\n  const onFailureCallback = (error: any) => {\r\n    // alert(\"Try\");\r\n  }\r\n\r\n  return (\r\n    <div className={styles.loginPageCard}>\r\n        <img className={styles.logo} src={logo} alt=\"\"/>\r\n        <span className={styles.subQuote}>Today a reader,<br/>tomorrow a leader.</span>\r\n\r\n        {(isLoading) ? <div className={styles.loaderDiv}><Loader size={50} border={7} color={\"#FC7B03\"}/></div> :<GoogleLogin \r\n          clientId={CLIENT_ID}\r\n          render={\r\n            (props) => {\r\n              return (\r\n                <button className={styles.googleLoginBtnBtn} onClick={props.onClick} disabled={props.disabled}>\r\n                  <div className={styles.googleLoginBtn}>\r\n                    <img className={styles.googleLogoImage} src={gLogo} alt=\"\"/>\r\n                    <span>Sign in with Google</span>\r\n                  </div>\r\n                </button>\r\n              )\r\n            }\r\n          }\r\n          buttonText={\"Login\"}\r\n          onSuccess={onSuccessCallback}\r\n          onFailure={onFailureCallback}\r\n          cookiePolicy={'single_host_origin'}\r\n          isSignedIn={true}\r\n          />}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Navbar\\Navbar.tsx",["161","162"],"import React, {useState, useContext} from 'react';\r\nimport {useHistory, useLocation, Link} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\nimport logo from '../../images/logo.svg';\r\nimport searchIcon from '../../images/searchicon.svg';\r\nimport cartIcon from '../../images/carticon.svg';\r\nimport userSample from '../../images/user.svg';\r\nimport hamIcon from '../../images/hamIcon.svg';\r\nimport { useGoogleLogout} from 'react-google-login';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport Menu from '../Menu/Menu';\r\nimport SlideMenu from '../SlideMenu/SlideMenu';\r\n\r\nconst NavLinksList = [\r\n  {\r\n    \"name\" : \"Fiction\",\r\n    \"pathName\" : \"/genre/fantasy&fiction\"\r\n  },\r\n  {\r\n    \"name\" : \"Children's\",\r\n    \"pathName\" : \"/genre/childrens\"\r\n  },\r\n  {\r\n    \"name\" : \"History\",\r\n    \"pathName\" : \"/genre/history\"\r\n  },\r\n  {\r\n    \"name\" : \"Horror\",\r\n    \"pathName\" : \"/genre/horror\"\r\n  },\r\n  {\r\n    \"name\" : \"Mystery\",\r\n    \"pathName\" : \"/genre/mystery\"\r\n  },\r\n  {\r\n    \"name\" : \"Non-Fiction\",\r\n    \"pathName\" : \"/genre/nonfiction\"\r\n  }\r\n]\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\r\n  const {user, setUser} = useContext(UserContext);\r\n  console.log(user);\r\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\r\n  \r\n\r\n  const pathName = location.pathname;\r\n\r\n  const CLIENT_ID:string = process.env.REACT_APP_CLIENT_ID || \"\";\r\n  const CLIENT_SECRET:string = process.env.REACT_APP_CLIENT_SECRET || \"\";\r\n\r\n  const {signOut, loaded} = useGoogleLogout({\r\n    clientId : CLIENT_ID,\r\n    onLogoutSuccess: () => {\r\n      onLogOutSuccess();\r\n    }\r\n  })\r\n\r\n  const onSearch = () => {\r\n    history.push({pathname:'/search', search: `query=${searchInput}`,});\r\n  }\r\n\r\n  const onClickLogo = () => {\r\n    setSearchInput(\"\");\r\n    history.push({pathname:'/'});\r\n  }\r\n\r\n  const logOutUser = () => {\r\n    signOut();\r\n    return true;\r\n  }\r\n\r\n  const onLogOutSuccess = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"gAuth\");\r\n    (isMenuOpen) && toggleMenu();\r\n  }\r\n\r\n  const onClickHam = () => {\r\n    (isNavOpen) ? setIsNavOpen(false) : setIsNavOpen(true);\r\n  }\r\n\r\n  const toggleMenu = () => {\r\n    (isMenuOpen) ? setIsMenuOpen(false) : setIsMenuOpen(true);  \r\n  }\r\n\r\n  const navigateToGenrePage = (genrePath : String) => {\r\n    history.push({pathname:`${genrePath}`});\r\n  }\r\n\r\n  const navigateToAccountPage = () => {\r\n    history.push({pathname: \"/account\"})\r\n    toggleMenu();\r\n    return true;\r\n  }\r\n  const navigateToViewOrders = () => {\r\n    history.push({pathname: \"/orders\"})\r\n    toggleMenu();\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    (pathName !== \"/login\") ? <div className={styles.navOuterContainer}>\r\n      {(isNavOpen) && <div className={styles.slideMenuContainer}>\r\n        <SlideMenu onClickHam={onClickHam} pathName={pathName} navigateToGenrePage={navigateToGenrePage}/>\r\n      </div>}\r\n      \r\n      <div className={styles.navInnerContainer}>\r\n        <div className={styles.navTopSection}>\r\n          <img onClick={onClickHam} className={styles.hamBtn} src={hamIcon} alt=\"\"/>\r\n          <img onClick={onClickLogo} className={styles.logoImage} src={logo} alt=\"Taperback\"/>\r\n          <div className={styles.searchBarContainer}>\r\n            <div className={styles.searchBar}>\r\n              <input className={styles.searchBarInput} value={searchInput} onChange={(e) => {setSearchInput(e.target.value)}} onKeyDown={(e) => {if(e.key === \"Enter\"){onSearch()}}} type=\"text\" placeholder=\"Search for books, authors, etc...\"/>\r\n              <button onClick={onSearch} className={styles.searchBtn}>\r\n                <img src={searchIcon} className={styles.searchBtnIcon} alt=\"Search\"/>\r\n                \r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <Link to=\"/cart\"><div className={styles.cartContainer}>\r\n            <img className={styles.cartIcon} src={cartIcon} alt=\"\"/>\r\n            <span className={styles.cartBadge}>{(user != null && user.user.cartItems) ? user.user.cartItems.items.length : 0}</span>\r\n          </div></Link>\r\n          <div className={styles.accountContainer}>\r\n            {\r\n              (user == null) ? <div className={styles.accountDiv}>\r\n                <img onClick={() => {history.push(\"/login\")}} className={styles.accountIcon} src={userSample} alt=\"\"/>\r\n              </div> : (\r\n                <div className={styles.accountDiv}>\r\n                  <img onClick={toggleMenu} className={styles.accountIcon} src={`${user.imageUrl}`} alt=\"\"/>\r\n                  <Menu menuData={[{name: \"Account\", action: navigateToAccountPage},{name: \"View Orders\", action: navigateToViewOrders},{name: \"Logout\", action: logOutUser}]} isMOpen={isMenuOpen} />\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className={styles.navBottomSection}>\r\n          {\r\n            NavLinksList.map((navLink, index) => {\r\n              return <div key={index} className={styles.genreLinkContainer} onClick={() => {navigateToGenrePage(navLink.pathName);}}>\r\n                <span className={(pathName === navLink.pathName) ? styles.genreLinkActive : styles.genreLinks}>{navLink.name}</span>\r\n              </div>\r\n            })\r\n          }\r\n        </div>\r\n        <div className={styles.navBottomSearch}>\r\n          <div className={styles.searchBarBottomContainer}>\r\n            <div className={styles.searchBar}>\r\n              <input className={styles.searchBarInput} value={searchInput} onChange={(e) => {setSearchInput(e.target.value)}} onKeyDown={(e) => {if(e.key === \"Enter\"){onSearch()}}} type=\"text\" placeholder=\"Search for books, authors, etc...\"/>\r\n              <button onClick={onSearch} className={styles.searchBtn}>\r\n                <img src={searchIcon} className={styles.searchBtnIcon} alt=\"Search\"/>\r\n                \r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> : <div></div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\HomeBookSection\\BookSection.tsx",["163","164"],"import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './BookSection.module.css';\r\nimport bestSellersImage from '../../images/bestsellerscover.png';\r\nimport bookImg from '../../images/book1.png';\r\nimport axios from 'axios';\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport Loader from '../Loader/Loader';\r\n\r\n\r\ninterface SectionDataSend {\r\n  sectionName: String,\r\n  sectionCover: String,\r\n  sectionBooks: Array<Book>\r\n}\r\n\r\nconst BookSection = () => {\r\n\r\n  const [sectionData, setSectionData] = useState<Array<SectionDataSend>>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchBookSections();\r\n  }, [])\r\n\r\n  const fetchBookSections = async () => {\r\n    axios.get('/api/indexBooks')\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setSectionData(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Server down!asdfasdf\")\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    {\r\n      (isLoading) ? <div className={styles.loaderDiv}><Loader size={50} border={8} color={\"#FC7B03\"}/></div> : sectionData.map((perSectionData, index) => {\r\n        return <div className={styles.bookSectionContainer}>\r\n          <div className={styles.titleContainer}>\r\n            <span>{perSectionData.sectionName}</span>\r\n            <div className={styles.orangeLine}></div>\r\n          </div>\r\n          <div className={styles.sectionBookContainer}>\r\n              <img className={styles.coverImage} src={`${perSectionData.sectionCover}`} alt=\"\"/>\r\n              <div className={styles.booksListContainer}>\r\n                {\r\n                  perSectionData.sectionBooks.map((book, index) => {\r\n                    return (\r\n                      <BookCard book={book} key={index} />\r\n                    );\r\n                  })\r\n                }\r\n              </div>\r\n          </div>\r\n        </div>\r\n      }) \r\n    }\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nconst BookCard:React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bookCardContainer}>\r\n      <img className={styles.bookImage} onClick={onBookClick} src={`${book.cover}`} alt=\"Book1\"/>\r\n      <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n      <span className={styles.bookAuthor}>by {book.author}</span>\r\n      <span className={styles.bookCost}>₹{book.cost}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookSection;\r\n","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\RippleButton\\RippleButton.tsx",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\HomeHero\\HeroSection.tsx",["165","166"],"import React, { useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport styles from './HeroSection.module.css';\r\nimport heroImage from '../../images/heroImage.png';\r\nimport heroImageSmall from '../../images/heroImageSmall.png';\r\nimport heroImage2 from '../../images/heroImage2.png';\r\nimport heroImage2Small from '../../images/heroImage2Small.png';\r\nimport heroImage3 from '../../images/heroImage3.png';\r\nimport heroImage3Small from '../../images/heroImage3Small.png';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport useWindowSize from '../../ResizeHook';\r\n\r\nconst HeroSection = () => {\r\n  const history = useHistory();\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <div className={styles.heroContainer}>\r\n      <Carousel infiniteLoop autoPlay transitionTime={1000} interval={5000} className={styles.carousel} showArrows={true} showThumbs={false} showStatus={false}>\r\n        <div className={styles.clickableHero} onClick={() => {\r\n          history.push(\"/book/5fccd18a1f8b5fa9056c2c5d\");\r\n        }}>\r\n          <img className={styles.herobgImage} src={(size.width && size.width < 600) ? heroImageSmall : heroImage} alt=\"\"/>\r\n        </div>\r\n        <div className={styles.clickableHero} onClick={() => {\r\n          history.push(\"/book/5fd2379868ad08a27309f0be\");\r\n        }}>\r\n          <img className={styles.herobgImage} src={(size.width && size.width < 600) ? heroImage2Small : heroImage2} alt=\"\"/>\r\n        </div>\r\n        <div className={styles.clickableHero} onClick={() => {\r\n          history.push(\"/book/5fccd24c1f8b5fa9056c2c5e\");\r\n        }}>\r\n          <img className={styles.herobgImage} src={(size.width && size.width < 600) ? heroImage3Small : heroImage3} alt=\"\"/>\r\n        </div>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\StarDisplay\\StarDisplay.tsx",["167"],"import React, {useState,useEffect} from 'react';\r\nimport styles from './StarDisplay.module.css';\r\nimport starFull from '../../images/star_full.svg';\r\nimport starHalf from '../../images/star_half.svg';\r\nimport starFullEmpty from '../../images/star_full_empty.svg';\r\n\r\nconst StarDisplay:React.FC<{value: number, size: string}> = ({value, size}) => {\r\n\r\n  const [stars, setStars] = useState<Array<JSX.Element>>([]);\r\n\r\n  useEffect(() => {\r\n    getStars();\r\n  }, [value])\r\n\r\n  const starImage = (isFull : number) : JSX.Element => {\r\n    if(isFull === 0){\r\n      return (<img className={styles.star} height={size} width={size} src={starFull} alt=\"\"/>);\r\n    }else if(isFull === 1){\r\n      return (<img className={styles.star} height={size} width={size} src={starHalf} alt=\"\"/>);\r\n    }else{\r\n      return (<img className={styles.star} height={size} width={size} src={starFullEmpty} alt=\"\"/>);\r\n    }\r\n  }\r\n\r\n  const getStars = () => {\r\n    let stars : Array<JSX.Element> = [];\r\n    const floorvalue = Math.floor(value);\r\n    for(let i = 0; i < floorvalue; i++){\r\n      stars.push(starImage(0));\r\n    }\r\n    let remainStars = 5 - floorvalue;\r\n    if(remainStars > 0){\r\n      stars.push(starImage(1));\r\n      remainStars--;\r\n    }\r\n    for(let i = 0; i < remainStars; i++){\r\n      stars.push(starImage(2));\r\n    }\r\n    setStars(stars);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.starContainer}>\r\n      {\r\n        stars.map((star, index) => {\r\n          return (star);\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StarDisplay;\r\n\r\n","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Loader\\Loader.tsx",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\BookDetails\\BookDetails.tsx",["168","169"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './BookDetails.module.css';\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport StarDisplay from '../StarDisplay/StarDisplay';\r\nimport {UserContext} from '../../contexts/UserContext';\r\nimport axios from 'axios';\r\nimport RippleButton from '../RippleButton/RippleButton';\r\n\r\nconst BookDetails:React.FC<{bookDetails : Book}> = ({bookDetails}) => {\r\n  const {user, setUser} = useContext(UserContext);\r\n  const history = useHistory();\r\n  const updatedUser = user;\r\n\r\n  const addToCartClick = () => {\r\n    if(user != null){\r\n      const userGoogleId = user.user.googleId;\r\n      const tokenId = user.tokenId;\r\n      console.log(bookDetails);\r\n      axios.post(\"/api/addToCart\", {tokenId, bookId: bookDetails._id, userGoogleId}).then(res => {\r\n        if(res.data.message === \"Invalid Token\"){\r\n          alert(\"Error. Logout and Login again.\")\r\n        }else{\r\n          console.log(res.data);\r\n          updatedUser.user.cartItems = res.data.cart;\r\n          updatedUser.user.cart = res.data.cart._id;\r\n          setUser({...updatedUser});\r\n        }\r\n        \r\n      })\r\n    }else{\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  const buyNowBtn = () => {\r\n    if(user === null){\r\n      history.push(\"/login\")\r\n      return;\r\n    }\r\n    const userGoogleId = user.user.googleId;\r\n    const tokenId = user.tokenId;\r\n\r\n    axios.post(\"/api/createCartForBuy\", {tokenId, bookId: bookDetails._id, userGoogleId}).then(res => {\r\n      console.log(res.data);\r\n      const {message, cart, cartId} = res.data;\r\n      \r\n      if(message === \"cart created\"){\r\n        // refresh your user\r\n        history.push({pathname:'/checkout', state:{cart : cart, cartId: cartId}});\r\n      }else{\r\n        alert(\"There was some problem.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bookDetailsPageContainer}>\r\n      <div className={styles.bookCoverContainer}>\r\n        <img className={styles.bookCoverImage} src={`${bookDetails.cover}`} alt={`${bookDetails.title}`}/>\r\n      </div>\r\n      <div className={styles.bookDetailsContainer}>\r\n        <span className={styles.bookTitle}>{bookDetails.title}</span>\r\n        {(bookDetails.subtitle !== \"\") && <span className={styles.bookSubtitle}>({bookDetails.subtitle})</span>}\r\n        <span className={styles.bookAuthor}>by {bookDetails.author}</span>\r\n        <div className={styles.starRatingsContainerWithVal}>\r\n          <StarDisplay value={parseFloat(`${bookDetails.ratings}`)} size={'20px'}/>\r\n          <span className={styles.ratingVal}>{bookDetails.ratings}</span>\r\n        </div>\r\n        <span className={styles.bookCost}>₹{bookDetails.cost}/-</span>\r\n        <div className={styles.buyBtnContainer}>\r\n          <RippleButton onClick={buyNowBtn} css={{marginRight:\"0.5rem\"}}>Buy Now</RippleButton>\r\n          <RippleButton onClick={addToCartClick} mode=\"border\">Add to Cart</RippleButton>\r\n        </div>\r\n        <span className={styles.bookDesc}>{bookDetails.desc}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default BookDetails;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\SearchList\\SearchList.tsx",["170"],"import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport StarDisplay from '../StarDisplay/StarDisplay';\r\nimport styles from './SearchList.module.css';\r\nimport {Book} from '../../interfaces/BookInterface'\r\nimport Loader from '../Loader/Loader';\r\nimport emptySearch from '../../images/emptySearch.svg';\r\n\r\nconst SearchList: React.FC<{bookData : Array<Book>, isLoading: boolean}> = ({bookData, isLoading}) => {\r\n\r\n\r\n  return (\r\n    <div className={styles.bookListContainer}>\r\n      <div className={styles.searchHeader}>\r\n        <span>Search Results</span>\r\n        <div className={styles.orangeLine}></div>\r\n      </div>\r\n      {\r\n        (isLoading)? <div className={styles.loaderDiv}><Loader size={50} border={8} color={\"#FC7B03\"}/></div> : \r\n        ((bookData && bookData.length === 0) ? <img className={styles.emptySearchImage} src={emptySearch} alt=\"\"/> : bookData.map((book, index) => {\r\n          return (\r\n            <SearchBookCard book={book} key={index}/>\r\n          );\r\n        }))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchBookCard: React.FC<{book: Book}> = ({book}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const onBookClick = () => {\r\n    history.push({pathname:`/book/${book._id}`});\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchBookCard}>\r\n      <img className={styles.bookCoverImage} onClick={onBookClick} src={`${book.cover}`} alt={`${book.title}`}/>\r\n      <div className={styles.bookInfoContainer}>\r\n        <span className={styles.bookTitle} onClick={onBookClick}>{book.title}</span>\r\n        {(book.subtitle !== \"\") && <span className={styles.bookSubtitle}>({book.subtitle})</span>}\r\n        <span className={styles.bookAuthor}>{book.author}</span>\r\n        <StarDisplay value={parseFloat(`${book.ratings}`)} size={'20px'}/>\r\n        <span className={styles.bookCost}>₹{book.cost}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchList;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\SlideMenu\\SlideMenu.tsx",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\Menu\\Menu.tsx",["171"],"import React, {useState} from 'react';\r\nimport styles from './Menu.module.css';\r\nimport {MenuInterface} from '../../interfaces/MenuInterface';\r\n\r\nconst Menu : React.FC<{menuData : MenuInterface, isMOpen : boolean}> = ({menuData, isMOpen}) => {\r\n  \r\n  console.log(isMOpen);\r\n\r\n  return (\r\n    <div style={{display: isMOpen ? 'block' : 'none' }} className={styles.dropDownMenuContainer}>\r\n      {\r\n        menuData.map((menu, index) => {\r\n          return <div key={index} onClick={menu.action} className={styles.dropDownMenuItem}>{menu.name}</div>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\ResizeHook.tsx",["172"],"import React, {useState, useEffect} from 'react';\r\n\r\nconst useWindowSize = ()  => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<{width : number|undefined, height: number|undefined}>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n",["173","174"],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\StripeContainer\\StripeContainer.tsx",[],"C:\\Users\\Ravi\\Documents\\WebDev\\taperback\\client\\src\\components\\StripeContainer\\PaymentForm.tsx",["175","176"],"import React, {useState} from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\nimport styles from './PaymentForm.module.css';\r\nimport { PaymentMethod, PaymentMethodResult, StripeCardElementOptions, StripeElement, StripeElements, StripeError } from '@stripe/stripe-js';\r\nimport RippleButton from '../RippleButton/RippleButton';\r\n\r\n\r\nconst CARD_OPTIONS: StripeCardElementOptions = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#FC7B03\",\r\n\t\t\tcolor: \"#FC7B03\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#ffaa5b\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#FC7B03\",\r\n\t\t\tcolor: \"#FC7B03\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst PaymentForm = ({amount, buyCallBack, errorCallback}) => {\r\n\r\n    const stripe = useStripe()\r\n    const elements: StripeElements = useElements()!;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const cardElement = elements!.getElement(CardElement);\r\n        const paymentRes: PaymentMethodResult|undefined = await stripe?.createPaymentMethod({\r\n            type: \"card\",\r\n            card: cardElement!\r\n        })\r\n        const error: StripeError|undefined = paymentRes?.error\r\n        const paymentMethod: PaymentMethod|undefined = paymentRes?.paymentMethod\r\n       \r\n        if(!error){\r\n            try{\r\n                const {id} = paymentMethod!\r\n                const response = await axios.post(\"/api/payment\", {\r\n                    amount: amount,\r\n                    id\r\n                })\r\n\r\n                if(response.data.success){\r\n                    console.log(\"Success Payment!!!\");\r\n                    buyCallBack();\r\n                }\r\n\r\n            }catch(error){\r\n                errorCallback();\r\n            }\r\n        }else{\r\n            alert(error.message);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.paymentFormContainer}>\r\n            <form>\r\n                <fieldset className={styles.paymentFormGroup}>\r\n                    <div className={styles.paymentFormRow}>\r\n                        <CardElement options={CARD_OPTIONS}/>\r\n                    </div>\r\n                </fieldset>\r\n                <RippleButton onClick={handleSubmit}>Confirm Purchase</RippleButton>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentForm;",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":41,"nodeType":"183","messageId":"184","endLine":3,"endColumn":45},{"ruleId":"181","severity":1,"message":"185","line":3,"column":47,"nodeType":"183","messageId":"184","endLine":3,"endColumn":58},{"ruleId":"181","severity":1,"message":"186","line":17,"column":8,"nodeType":"183","messageId":"184","endLine":17,"endColumn":19},{"ruleId":"181","severity":1,"message":"187","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":13},{"ruleId":"181","severity":1,"message":"188","line":11,"column":16,"nodeType":"183","messageId":"184","endLine":11,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":24,"column":6,"nodeType":"191","endLine":24,"endColumn":16,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":30,"column":6,"nodeType":"191","endLine":30,"endColumn":8,"suggestions":"194"},{"ruleId":"181","severity":1,"message":"188","line":14,"column":16,"nodeType":"183","messageId":"184","endLine":14,"endColumn":23},{"ruleId":"181","severity":1,"message":"195","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":28,"column":6,"nodeType":"191","endLine":28,"endColumn":16,"suggestions":"196"},{"ruleId":"189","severity":1,"message":"193","line":34,"column":6,"nodeType":"191","endLine":34,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":135,"column":26,"nodeType":"200","messageId":"201","endLine":135,"endColumn":28},{"ruleId":"181","severity":1,"message":"202","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":13},{"ruleId":"181","severity":1,"message":"203","line":9,"column":9,"nodeType":"183","messageId":"184","endLine":9,"endColumn":16},{"ruleId":"181","severity":1,"message":"188","line":10,"column":16,"nodeType":"183","messageId":"184","endLine":10,"endColumn":23},{"ruleId":"189","severity":1,"message":"204","line":22,"column":6,"nodeType":"191","endLine":22,"endColumn":12,"suggestions":"205"},{"ruleId":"189","severity":1,"message":"206","line":83,"column":6,"nodeType":"191","endLine":83,"endColumn":17,"suggestions":"207"},{"ruleId":"181","severity":1,"message":"208","line":26,"column":16,"nodeType":"183","messageId":"184","endLine":26,"endColumn":26},{"ruleId":"189","severity":1,"message":"209","line":33,"column":6,"nodeType":"191","endLine":33,"endColumn":13,"suggestions":"210"},{"ruleId":"189","severity":1,"message":"211","line":24,"column":6,"nodeType":"191","endLine":24,"endColumn":13,"suggestions":"212"},{"ruleId":"181","severity":1,"message":"213","line":23,"column":19,"nodeType":"183","messageId":"184","endLine":23,"endColumn":25},{"ruleId":"181","severity":1,"message":"188","line":15,"column":16,"nodeType":"183","messageId":"184","endLine":15,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":21,"column":6,"nodeType":"191","endLine":21,"endColumn":12,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"215","line":32,"column":10,"nodeType":"183","messageId":"184","endLine":32,"endColumn":14},{"ruleId":"181","severity":1,"message":"216","line":54,"column":9,"nodeType":"183","messageId":"184","endLine":54,"endColumn":29},{"ruleId":"181","severity":1,"message":"213","line":56,"column":19,"nodeType":"183","messageId":"184","endLine":56,"endColumn":25},{"ruleId":"181","severity":1,"message":"217","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":24},{"ruleId":"181","severity":1,"message":"218","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":15},{"ruleId":"181","severity":1,"message":"219","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":2,"column":9,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"189","severity":1,"message":"220","line":13,"column":6,"nodeType":"191","endLine":13,"endColumn":13,"suggestions":"221"},{"ruleId":"181","severity":1,"message":"219","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"222","line":1,"column":26,"nodeType":"183","messageId":"184","endLine":1,"endColumn":35},{"ruleId":"181","severity":1,"message":"219","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"219","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"223","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"177","replacedBy":"224"},{"ruleId":"179","replacedBy":"225"},{"ruleId":"181","severity":1,"message":"219","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"226","line":5,"column":72,"nodeType":"183","messageId":"184","endLine":5,"endColumn":85},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'PhoneScreen' is defined but never used.","'axios' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["230"],"'RippleButton' is defined but never used.",["231"],["232"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Book' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'fetchGenre'. Either include it or remove the dependency array.",["234"],"'statusCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBookDetails'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'fetchSearchResults'. Either include it or remove the dependency array.",["236"],"'loaded' is assigned a value but never used.",["237"],"'user' is assigned a value but never used.","'CLIENT_SECRET' is assigned a value but never used.","'bestSellersImage' is defined but never used.","'bookImg' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getStars'. Either include it or remove the dependency array.",["238"],"'useEffect' is defined but never used.","'React' is defined but never used.",["227"],["228"],"'StripeElement' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"239","fix":"243"},{"desc":"241","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"241","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [history, location]",{"range":"256","text":"257"},"Update the dependencies array to be: [history, user]",{"range":"258","text":"259"},{"range":"260","text":"257"},{"range":"261","text":"259"},"Update the dependencies array to be: [fetchOrders, user]",{"range":"262","text":"263"},"Update the dependencies array to be: [fetchGenre, genreName]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetchBookDetails, match]",{"range":"266","text":"267"},"Update the dependencies array to be: [fetchSearchResults, query]",{"range":"268","text":"269"},{"range":"270","text":"259"},"Update the dependencies array to be: [getStars, value]",{"range":"271","text":"272"},[891,901],"[history, location]",[1008,1010],"[history, user]",[1142,1152],[1259,1261],[701,707],"[fetchOrders, user]",[2349,2360],"[fetchGenre, genreName]",[862,869],"[fetchBookDetails, match]",[789,796],"[fetchSearchResults, query]",[697,703],[459,466],"[getStars, value]"]